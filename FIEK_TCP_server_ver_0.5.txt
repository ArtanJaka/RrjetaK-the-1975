from socket import *
import random
import _thread
import datetime

port=9000

ServerSocket = socket(AF_INET, SOCK_STREAM)
ServerSocket.bind(('', port))
ServerSocket.listen(5)
print('---------FIEK-TCP-Server-----------jemi online--------')

def Reply(request,connSocket,addr):
    request = request.decode("UTF-8")
    message = request.split(' ')
    response = "  "  
    print("Request: "+request)
    
    if (message[0]=="TIME"):
        now=datetime.datetime.now().strftime("%d.%m.%Y %H:%M:%S %p")
        response="Koha ne kompjuterin e serverit eshte:"+str(now)
    if(message[0]=="ZANORE"):
        zanoret="AEIOUYaeiouy"
        nrZan=0
        message="".join(message)
        message=list(message)
        for i in range(0,len(message)):
            if message[i] in zanoret:
                nrZan=nrZan+1;
        nrZan=nrZan-3
        response="Numri i zanoreve ne tesktin e dhene eshte:"+str(nrZan)         
    if (message[0]=="KENO"):
        response="Numrat e rastesishem 1-80: "
        for i in range(0, 20):
            x= random.randint(1,80)
            response= response+" "+str(x)  
    if (message[0]=="FAKTORIEL"):
        fakt=1
        try:
            int(message[1])
            for i in range(1, int(message[1])+1):
                fakt=fakt*i
            response = "Faktorieli i numrit "+str(message[1])+" eshte "+str(fakt)
            
        except ValueError:
            response= "Gabim ne formatin e Request"
    if (message[0]=="M1"):
        message = " ".join(message) 
        message = message.encode("UTF-8")      
        requestB = bytearray(message)        
        binare = ""
        for i in range(2,len(requestB)):
            x = bin(requestB[i])
            binare = binare+str(x)
        binare = binare.split("b")
        binare = ''.join(binare)
        bfinale = ""
        x = 0
        for i in range(0,len(binare)):
            if binare[i]=='0':
                bfinale = bfinale+u"\u2588" 
            if binare[i]=='1':
                bfinale = bfinale+u"\u0020"
            if x%20==0:
                bfinale = bfinale+"\n"
            x=x+1
        response = bfinale
    if (message[0]=="M2"):        
        try:
            height = int(message[1])
            width = int(message[2])
            message.remove("M2")
            message.remove(str(height))
            message.remove(str(width))
            message = " ".join(message)
            response = ""
            x=0
            for i in range(0,height):
                for j in range(0,width):
                    response = response +message[(x%len(message))]+" "
                    j=j+1
                    x=x+1
                i=i+1
                response = response + "\n"          
        except ValueError:
            response= "Gabim ne formatin e Request"
    if  (message[0]=="M3"):
        message.remove("M3")
        message=" ".join(message)
        message1= list(message)
        message=list(message)
        for i in range(0,len(message)):
             message1[len(message)-i-1]=message[i]
        response = "".join(message1) 
    if (message[0]=="M4"):
        max_num=message[1]
        for i in range(1,len(message)):
            if  message[i]>max_num:
                max_num=message[i]
        response="Numri maksimal i listes:"+max_num
    if (message[0]=="M5"):
        response = "TBD"
    if (message[0]=="M6"):
        response = "TBD"
    if (message[0]=="M7"):
        response = "TBD"
    if (message[0]=="M8"):
        response = "TBD"
    return response


def Connection(connSocket,addr):
    print("Lidhur me klientin: "+str(addr))
    while 1:
        try:      
            request = connSocket.recv(4096)
            print("Client:"+str(addr))
            response = Reply(request,connSocket,addr)
            response = response.encode("UTF-8")         
            connSocket.send(response)
        except:
            print ("Lidhja me klientin :"+str(addr)+"u nderpre")
            connSocket.close()            
            break

while True:    
    try:
        connSocket,addr = ServerSocket.accept()
        _thread.start_new_thread ( Connection, (connSocket,addr) )
    except:
        print ("Nuk mund te  lidhemi me klient")

